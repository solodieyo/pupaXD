from aiogram import Router, Bot
from aiogram.filters import Command, CommandObject
from aiogram.types import Message
from dishka import FromDishka
from dishka.integrations.aiogram import inject

from pupa.config import AppConfig

router = Router()


@router.message(Command('issue'))
@inject
async def issue_command(
	message: Message,
	command: CommandObject,
	bot: Bot,
	config: FromDishka[AppConfig]
):
	if command.args:
		await bot.send_message(
			chat_id=config.tg.idea_channel_id,
			text='<b>–ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!</b>\n\n'
				 f'–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - <a href="t.me/{message.from_user.username}">{message.from_user.full_name}</a>'
				 f' - <ID[<code>{message.from_user.id}</code>]\n\n'
				 f'{command.args}'
		)
		await message.reply('–í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
	else:
		await message.answer('üí° –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ—é –∏–¥–µ—é –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞\n\n'
							 '–ù–∞–ø–∏—à–∏—Ç–µ "<code>/issue –¢–µ–∫—Å—Ç...</code>", —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ.')